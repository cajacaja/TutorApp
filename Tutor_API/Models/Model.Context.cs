//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tutor_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TutorEntities : DbContext
    {
        public TutorEntities()
            : base("name=TutorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrator> Administrators { get; set; }
        public virtual DbSet<Dan> Dans { get; set; }
        public virtual DbSet<Grad> Grads { get; set; }
        public virtual DbSet<KontaktInfo> KontaktInfoes { get; set; }
        public virtual DbSet<KorisnickiNalog> KorisnickiNalogs { get; set; }
        public virtual DbSet<Materijal> Materijals { get; set; }
        public virtual DbSet<NivoTezine> NivoTezines { get; set; }
        public virtual DbSet<ObimStudent> ObimStudents { get; set; }
        public virtual DbSet<Oblast> Oblasts { get; set; }
        public virtual DbSet<OcjenaStudent> OcjenaStudents { get; set; }
        public virtual DbSet<OcjenaTutor> OcjenaTutors { get; set; }
        public virtual DbSet<Podkategorija> Podkategorijas { get; set; }
        public virtual DbSet<Prijava> Prijavas { get; set; }
        public virtual DbSet<RadnoStanje> RadnoStanjes { get; set; }
        public virtual DbSet<Spol> Spols { get; set; }
        public virtual DbSet<StatusKorisnickogRacuna> StatusKorisnickogRacunas { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Termin> Termins { get; set; }
        public virtual DbSet<TipStudenta> TipStudentas { get; set; }
        public virtual DbSet<Tutor> Tutors { get; set; }
        public virtual DbSet<TutorTitula> TutorTitulas { get; set; }
        public virtual DbSet<Ucionica> Ucionicas { get; set; }
        public virtual DbSet<Zahtjev> Zahtjevs { get; set; }
        public virtual DbSet<BanPrijavaStudent> BanPrijavaStudents { get; set; }
        public virtual DbSet<BanPrijavaTutor> BanPrijavaTutors { get; set; }
    
        public virtual int tsp_Administrator_Insert(string ime, string prezime, Nullable<System.DateTime> datumDodavanja, string email, string telefon, string korisnickoIme, string lozinkaHash, string lozinkaSalt)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumDodavanjaParameter = datumDodavanja.HasValue ?
                new ObjectParameter("DatumDodavanja", datumDodavanja) :
                new ObjectParameter("DatumDodavanja", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tsp_Administrator_Insert", imeParameter, prezimeParameter, datumDodavanjaParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter);
        }
    
        public virtual ObjectResult<Administrator_SelectAll> tsp_Administrator_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Administrator_SelectAll>("tsp_Administrator_SelectAll");
        }
    
        public virtual ObjectResult<Administrator_NameSelect> tsp_Administrator_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Administrator_NameSelect>("tsp_Administrator_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Administrator_SelectOne> tsp_Administrator_SelectOne(Nullable<int> administratorId)
        {
            var administratorIdParameter = administratorId.HasValue ?
                new ObjectParameter("AdministratorId", administratorId) :
                new ObjectParameter("AdministratorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Administrator_SelectOne>("tsp_Administrator_SelectOne", administratorIdParameter);
        }
    
        public virtual int tsp_Administrator_Update(Nullable<int> administratorId, string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaHash, string lozinkaSalt)
        {
            var administratorIdParameter = administratorId.HasValue ?
                new ObjectParameter("AdministratorId", administratorId) :
                new ObjectParameter("AdministratorId", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tsp_Administrator_Update", administratorIdParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter);
        }
    
        public virtual ObjectResult<Grad_Result> tsp_Grad_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad_Result>("tsp_Grad_SelectAll");
        }
    
        public virtual ObjectResult<Tutor_SearchSelect_Result> tps_Tutor_SearchSelect(string imePrezime, Nullable<int> gradId, Nullable<int> oblastId)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var oblastIdParameter = oblastId.HasValue ?
                new ObjectParameter("OblastId", oblastId) :
                new ObjectParameter("OblastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tutor_SearchSelect_Result>("tps_Tutor_SearchSelect", imePrezimeParameter, gradIdParameter, oblastIdParameter);
        }
    
        public virtual ObjectResult<Tutor_Details_Result> tsp_Tutor_Details(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tutor_Details_Result>("tsp_Tutor_Details", idParameter);
        }
    
        public virtual ObjectResult<Oblast_select_Result> tps_Oblast_select(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Oblast_select_Result>("tps_Oblast_select", idParameter);
        }
    
        public virtual ObjectResult<Zahtjev_SelectByTutorId_Result> tps_Zahtjev_SelectByTutorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zahtjev_SelectByTutorId_Result>("tps_Zahtjev_SelectByTutorId", idParameter);
        }
    
        public virtual ObjectResult<Ucionica_SelectTutorUcionica_Result> tsp_Ucionica_SelectTutorUcionica(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ucionica_SelectTutorUcionica_Result>("tsp_Ucionica_SelectTutorUcionica", idParameter);
        }
    
        public virtual ObjectResult<Tutor_ReviewsSelect_Result> tsp_Tutor_ReviewsSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tutor_ReviewsSelect_Result>("tsp_Tutor_ReviewsSelect", idParameter);
        }
    
        public virtual ObjectResult<Tutor_SelectAll_Result> tsp_Tutor_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tutor_SelectAll_Result>("tsp_Tutor_SelectAll");
        }
    
        public virtual ObjectResult<BanStudente_Select_Result> tsp_BanPrijavaStudente_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BanStudente_Select_Result>("tsp_BanPrijavaStudente_Select");
        }
    
        public virtual ObjectResult<BanPrijavaStudente_SelectOne_Result> tsp_BanPrijavaStudente_SelectOne(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BanPrijavaStudente_SelectOne_Result>("tsp_BanPrijavaStudente_SelectOne", idParameter);
        }
    
        public virtual ObjectResult<BanTutor_Select_Result> tsp_BanPrijavaTutor_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BanTutor_Select_Result>("tsp_BanPrijavaTutor_Select");
        }
    
        public virtual ObjectResult<BanPrijavaTutor_SelectOne_Result> tsp_BanPrijavaTutor_SelectOne(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BanPrijavaTutor_SelectOne_Result>("tsp_BanPrijavaTutor_SelectOne", idParameter);
        }
    
        public virtual ObjectResult<Tutori_SelectBanTutor_Result> tsp_Tutori_SelectBanTutor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tutori_SelectBanTutor_Result>("tsp_Tutori_SelectBanTutor");
        }
    
        public virtual ObjectResult<Student_BanStudents_Result> tsp_Student_SelectBanStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student_BanStudents_Result>("tsp_Student_SelectBanStudents");
        }
    
        public virtual int tsp_Student_Insert(string ime, string prezime, Nullable<System.DateTime> datumRodjenja, Nullable<System.DateTime> datumDodavanja, string email, string telefon, string adresa, string korisnickoIme, string lozinkaHash, string lozinkaSalt, Nullable<int> spolId, Nullable<int> gradId, Nullable<int> tipStudentaId)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumRodjenjaParameter = datumRodjenja.HasValue ?
                new ObjectParameter("DatumRodjenja", datumRodjenja) :
                new ObjectParameter("DatumRodjenja", typeof(System.DateTime));
    
            var datumDodavanjaParameter = datumDodavanja.HasValue ?
                new ObjectParameter("DatumDodavanja", datumDodavanja) :
                new ObjectParameter("DatumDodavanja", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var spolIdParameter = spolId.HasValue ?
                new ObjectParameter("SpolId", spolId) :
                new ObjectParameter("SpolId", typeof(int));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("GradId", gradId) :
                new ObjectParameter("GradId", typeof(int));
    
            var tipStudentaIdParameter = tipStudentaId.HasValue ?
                new ObjectParameter("TipStudentaId", tipStudentaId) :
                new ObjectParameter("TipStudentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tsp_Student_Insert", imeParameter, prezimeParameter, datumRodjenjaParameter, datumDodavanjaParameter, emailParameter, telefonParameter, adresaParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter, spolIdParameter, gradIdParameter, tipStudentaIdParameter);
        }
    }
}
